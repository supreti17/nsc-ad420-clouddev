swagger: '2.0'
info:
  description: This is the task API.
  version: 1.0.0
  title: Swagger Petstore
  termsOfService: 'http://surajupreti.com/terms/'
  contact:
    email: upretisuraj@yahoo.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: taskapi.surajupreti.com
basePath: /v2
tags:
  - name: task
    description: Everything related to tasks
schemes:
  - http
paths:
  /users:
    get:
      tags:
        - user
      summary: Get a list of users
      description: ''
      operationId: getUsersList
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
        '405':
          description: No Users Found
    post:
      tags:
        - user
      summary: Add a new user
      description: ''
      operationId: addUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: User object to add
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
        '405':
          description: Invalid input
  '/users/{id}':
    get:
      tags:
        - user
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid User ID
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Updates a user by ID
      description: ''
      operationId: updateUserById
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user that needs to be updated
          required: true
          type: integer
          format: int64
        - name: name
          in: formData
          description: Updated name of the user
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - user
      summary: Deletes a user by ID
      description: ''
      operationId: deleteUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: User id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid User ID
        '404':
          description: User not found
  '/users/{id}/tasks':
    get:
      tags:
        - user tasks
      summary: Get a list of tasks for a specific user
      description: ''
      operationId: getUsersTasksList
      consumes:
        - multipart/form-data
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '405':
          description: No Users Found
    post:
      tags:
        - user tasks
      summary: Add a new task
      description: ''
      operationId: addATask
      consumes:
        - multipart/form-data
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Task object to add
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: OK
        '405':
          description: Invalid input
  '/users/{id}/tasks/{taskId}':
    get:
      tags:
        - user tasks
      summary: Get a specific task by ID
      description: Returns a task
      operationId: getTaskById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
        - name: taskId
          in: path
          description: ID of task
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid Task ID
        '404':
          description: Task not found
    put:
      tags:
        - user tasks
      summary: Updates a user task by ID
      description: ''
      operationId: updateUserTaskById
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
        - name: taskId
          in: path
          description: ID of task
          required: true
          type: integer
          format: int64
        - name: title
          in: formData
          description: Updated title of the task
          required: false
          type: string
        - name: description
          in: formData
          description: Updated description of the task
          required: false
          type: string
        - name: dueDate
          in: formData
          description: Updated due date of the task
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - user tasks
      summary: Deletes a user task by ID
      description: ''
      operationId: deleteUserTaskById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: integer
          format: int64
        - name: taskId
          in: path
          description: ID of task
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid task ID
        '404':
          description: Task not found
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tasks:
        type: array
        items:
          $ref: '#/definitions/Task'
  Task:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      description:
        type: string
      creationDate:
        type: string
      dueDate:
        type: string
      completionDate:
        type: string
